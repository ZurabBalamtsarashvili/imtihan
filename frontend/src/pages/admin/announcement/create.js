import AppLayout from '@/layouts/AppLayout';
import Head from 'next/head';
import BackButton from '@/components/BackButton';
import Input from '@/components/Input';
import Button from '@/components/Button';
import { useDispatch } from '@/store';
import { useRouter } from 'next/router';
import toast from 'react-hot-toast';
import * as Yup from 'yup';
import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import { useEffect } from 'react';
import Label from '@/components/Label';
import { postAnnouncement } from '@/store/slices/announcement';
import InputFile from '@/components/InputFile';
import Textarea from '@/components/Textarea';

Create.getLayout = page => <AppLayout name="Create">{page}</AppLayout>;

const AnnouncementCreateSchema = Yup.object().shape({
    name: Yup.string().required('Required'),
    content: Yup.string().required('Required'),
    src: Yup.mixed().test('src', 'You need to provide a file', value => {
        if (value.length > 0) {
            return true;
        }
        return false;
    }),
});

export default function Create() {
    const router = useRouter();

    const {
        handleSubmit,
        register,
        reset,
        formState: { errors },
    } = useForm({ resolver: yupResolver(AnnouncementCreateSchema) });

    const dispatch = useDispatch();
    const onSubmit = data => {
        const formData = new FormData();

        formData.append('src', data.src[0]);

        for (const key in data) {
            if (key !== 'src') {
                formData.append(key, data[key]);
            }
        }

        dispatch(postAnnouncement(formData))
            .then(res => {
                toast.success('Created successfully!');
                router.push('/admin/announcement');
            })
            .catch(err => {
                toast.error(err?.response?.data?.message);
                console.log('err');
            });
    };

    useEffect(() => {
        reset({ src: undefined });
    }, []);

    return (
        <>
            <Head>
                <title>Create - Ä°mtihan</title>
                <meta name="description" content="Generated by codenteq" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="px-4 pt-16">
                <BackButton href="/admin/announcement" />

                <form onSubmit={handleSubmit(onSubmit)}>
                    <div className="flex items-center justify-between my-4">
                        <div className="mt-3" />
                        <Button type="submit">Save</Button>
                    </div>

                    <div className="mb-3">
                        <InputFile className="my-4">
                            <Input
                                {...register('src')}
                                type="file"
                                className="hidden"
                                accept="image/*"
                            />
                        </InputFile>
                        {errors.src?.message && (
                            <p className="mt-2 text-sm text-red-600 dark:text-red-500">
                                {errors.src.message}
                            </p>
                        )}
                    </div>

                    <div>
                        <Label>Name</Label>

                        <Input
                            {...register('name')}
                            type="text"
                            className="block mt-1 w-full"
                        />
                        {errors.name?.message && (
                            <p className="mt-2 text-sm text-red-600 dark:text-red-500">
                                {errors.name.message}
                            </p>
                        )}
                    </div>
                    <div>
                        <Label>Content</Label>

                        <Textarea
                            {...register('content')}
                            className="block mt-1 w-full"
                        />
                        {errors.content?.message && (
                            <p className="mt-2 text-sm text-red-600 dark:text-red-500">
                                {errors.content.message}
                            </p>
                        )}
                    </div>
                </form>
            </main>
        </>
    );
}
