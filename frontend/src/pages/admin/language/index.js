import AppLayout from '@/layouts/AppLayout';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import Datatable from '@/components/table/Datatable';
import { useDispatch, useSelector } from '@/store';
import { deleteLanguage, getLanguages } from '@/store/slices/language';
import {
    PencilSquareIcon,
    TrashIcon,
    EyeIcon,
} from '@heroicons/react/24/outline';
import Link from 'next/link';
import CreateModal from '@/sections/admin/languages/CreateModal';

Index.getLayout = page => <AppLayout name="Languages">{page}</AppLayout>;

export default function Index() {
    const dispatch = useDispatch();
    const [pagePaginate, setPagePaginate] = useState(1);
    const [search, setSearch] = useState('');
    const [openCreateModal, setOpenCreateModal] = useState(false);

    const { languages, meta, isLoading } = useSelector(state => state.language);

    useEffect(() => {
        dispatch(getLanguages(pagePaginate, search));
    }, [dispatch, pagePaginate, search]);

    const handleDelete = id => {
        confirm('Are you sure?') && dispatch(deleteLanguage(id));
    };

    const columns = [
        {
            Header: 'Name',
            accessor: 'name',
        },
        {
            Header: 'Code',
            accessor: 'code',
        },
        {
            Header: 'Transactions',
            Cell: ({ row }) => (
                <div className="flex items-center space-x-2">
                    <Link
                        href={'/admin/language/' + row?.original?.id + '/edit'}>
                        <a className="text-sm text-zinc-500 cursor-pointer hover:text-zinc-700 dark:text-zinc-400 dark:hover:text-zinc-300">
                            <PencilSquareIcon className="h-5 w-5" />
                        </a>
                    </Link>
                    <Link
                        href={'/admin/language/' + row?.original?.id + '/view'}>
                        <a className="text-sm text-zinc-500 cursor-pointer hover:text-zinc-700 dark:text-zinc-400 dark:hover:text-zinc-300">
                            <EyeIcon className="h-5 w-5" />
                        </a>
                    </Link>
                    <button
                        onClick={() => handleDelete(row?.original?.id)}
                        className="text-sm text-zinc-500 hover:text-zinc-700 dark:text-zinc-400 dark:hover:text-zinc-300">
                        <TrashIcon className="h-5 w-5" />
                    </button>
                </div>
            ),
        },
    ];

    return (
        <>
            <Head>
                <title>Languages - Ä°mtihan</title>
                <meta name="description" content="Generated by codenteq" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="px-4 pt-16">
                <Datatable
                    columns={columns}
                    data={languages}
                    pagePaginate={pagePaginate}
                    setPagePaginate={setPagePaginate}
                    meta={meta}
                    isLoading={isLoading}
                    button={{
                        name: 'Create',
                        onClick: () => setOpenCreateModal(true),
                    }}
                    setSearch={setSearch}
                />
                <CreateModal
                    open={openCreateModal}
                    setIsOpen={setOpenCreateModal}
                />
            </main>
        </>
    );
}
